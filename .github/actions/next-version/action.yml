name: Determine Next Version
inputs:
  currentBranch:
    description: 'Branch name'
    required: true
  versionFilePath:
    description: 'Path to the version.txt'
    required: true
  shouldIncrementMajor:
    description: 'Increment the major version'
    required: true
    default: 'false'
  shouldIncrementMinor:
    description: 'Increment the minor version'
    required: true
    default: 'false'
outputs:
  newVersionNumber:
    description: 'The new version'
runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Determine next version
      id: version
      shell: pwsh
      run: |
        function Get-InsightVersion {
            # Go up one level from the current directory
            $versionFilePath = Join-Path -Path (Split-Path -Parent ${{ inputs.scriptRoot }}) -ChildPath "version.txt"
            
            if (-not (Test-Path -Path $versionFilePath)) {
                Write-Error "Version file not found at $versionFilePath"
                return $null
            }
            
            $version = Get-Content -Path $versionFilePath -Raw
            
            return $version.Trim()
        }

        # Get current version
        $current_version = Get-InsightVersion
        if (-not $current_version) {
            Write-Error "Failed to get current version"
            exit 1
        }
        Write-Output "Current version: $current_version"

        $branch = "${{ inputs.currentBranch }}"

        if ($branch -eq "master" -or $branch -eq "main") {
            Write-Output "Master/main branch detected - incrementing major version"
           
        }
        elseif ($branch -like "release/*") {
            Write-Output "Release branch detected - incrementing minor version"
           
        }