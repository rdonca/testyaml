name: Build and Pack

on:
  workflow_call:
    inputs:
      buildenv:
        required: true
        type: string
      buildVersion:
        required: true
        type: string
      applications:
        required: true
        type: string

jobs:
  preprocess:
    runs-on: windows-2019    
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set up the matrix
        id: set-matrix
        shell: pwsh
        run: |
          $apps = '${{ inputs.applications }}'
          Write-Host "Applications input: $apps"
          $app_array = $apps -split ','
          Write-Host "App array: $($app_array -join ', ')"
          $matrix_object = @{ "apps" = $app_array }
          $matrix_json = $matrix_object | ConvertTo-Json -Compress
          Write-Host "Matrix JSON: $matrix_json"
          echo "::set-output name=matrix::$matrix_json"
          
      - name: Display Matrix
        shell: pwsh
        run: |
          echo "Matrix: ${{ steps.set-matrix.outputs.matrix }}"

  build_and_pack00:
    needs: preprocess
    runs-on: windows-2019
    steps:
      - name: Use Matrix Output
        shell: pwsh
        run: |
          $matrix = '${{ needs.preprocess.outputs.matrix }}'
          Write-Host "Matrix from preprocess job: $matrix"

      - name: Show Parameters
        shell: pwsh
        run: |
          Write-Host "The 'Matrix' : ${{ needs.preprocess.outputs.matrix }}"

  build_and_pack:
    needs: preprocess
    runs-on: windows-2019
    strategy:
        matrix: ${{ fromJson(needs.preprocess.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - run: echo ${{matrix.target}}
        
      - name: Get application parameters
        id: get_app_params
        run: |
            $json = Get-Content -Raw -Path config.json | ConvertFrom-Json
            $app = $json.Applications | Where-Object { $_.Name -eq "${{ matrix.application }}" }
  
            echo "appPath=$app.Path" >> $GITHUB_ENV
            echo "appProj=$app.Proj" >> $GITHUB_ENV
            echo "appBuild=$app.Build" >> $GITHUB_ENV
            echo "appConfig=$app.Config" >> $GITHUB_ENV
        shell: pwsh   

      - name: Show Parameters
        run: |
          echo "The 'Name' : ${{ matrix.application }}"
          echo "The 'Path' : ${{ steps.get_app_params.outputs.appPath }}"
          echo "The 'Proj' : ${{ steps.get_app_params.outputs.appProj }}"
          echo "The 'Build' : ${{ steps.get_app_params.outputs.appBuild }}"
          echo "The 'Config' : ${{ steps.get_app_params.outputs.appConfig }}"
